<Window xmlns="https://github.com/avaloniaui"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:_3DSpectrumVisualizer"
		xmlns:colorpicker="clr-namespace:AvaloniaColorPicker;assembly=AvaloniaColorPicker"
		mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="800"
		Width="1000" Height="600" WindowState="Maximized"
		x:Class="_3DSpectrumVisualizer.MainWindow"
		Title="RGA 3D Spectrum Visualizer" Icon="avares://3DSpectrumVisualizer/Assets/chart-icon.ico">
	<Window.Styles>
		<Style Selector="Slider">
			<Setter Property="Margin" Value="3"></Setter>
			<Setter Property="MaxHeight" Value="40"></Setter>
			<Setter Property="RenderTransform">
				<Setter.Value>
					<TransformGroup>
						<TranslateTransform X="0" Y="-10"></TranslateTransform>
					</TransformGroup>
				</Setter.Value>
			</Setter>
		</Style>
		<Style Selector="Button">
			<Setter Property="Margin" Value="3"></Setter>
		</Style>
		<Style Selector="CheckBox">
			<Setter Property="MinWidth" Value="0"></Setter>
			<Setter Property="Margin" Value="20,0,20,0"></Setter>
			<Setter Property="HorizontalAlignment" Value="Right"></Setter>
			<Setter Property="Content" Value="Force Render"></Setter>
		</Style>
		<Style Selector="StackPanel">
			<Setter Property="ZIndex" Value="1"></Setter>
			<Setter Property="Orientation" Value="Horizontal"></Setter>
			<Setter Property="VerticalAlignment" Value="Top"></Setter>
			<Setter Property="HorizontalAlignment" Value="Right"></Setter>
			<Setter Property="Margin" Value="3,0,5,0"></Setter>
		</Style>
	</Window.Styles>
	<Grid ColumnDefinitions="auto,*" RowDefinitions="auto,*, auto">
		<Expander Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" ExpandDirection="Right" IsExpanded="True" Padding="0,10,0,0">
			<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible" Padding="0,0,10,0">
				<StackPanel Orientation="Vertical">
					<CheckBox x:Name="chkHorizontalGradient" Margin="0,0,20,10" 
							  IsChecked="{x:Static local:DataRepository.UseHorizontalGradient}"
							  Click="OnHorizontalGradientChecked">Horizontal
Gradient</CheckBox>
					<TextBlock>Time Axis Interval</TextBlock>
					<Slider Minimum="1.5" Maximum="10" x:Name="TimeAxisSlider" PropertyChanged="OnTimeAxisSliderChanged" 
							Value="{Binding #Spectrum3D.TimeAxisInterval}"></Slider>
					<TextBlock>Background</TextBlock>
					<colorpicker:ColorButton x:Name="BackgroundPicker" Margin="0,10,0,10" PropertyChanged="OnBackgroundEdited"
						Color="{Binding #Spectrum3D.Background, Converter={x:Static local:SkiaCustomControl.ColorConverter}}"></colorpicker:ColorButton>
					<TextBlock>Lighting Emulation</TextBlock>
					<Slider x:Name="sldLight" Maximum="255" PropertyChanged="OnLightSliderChanged"></Slider>
					<TextBlock Margin="0,0,0,10">Color Scheme</TextBlock>
					<NumericUpDown Minimum="1" DataContext="{x:Static local:Program.Config}" Maximum="{Binding ColorSchemes.Count}" Value="{Binding ColorSchemes.SelectedIndex, Mode=TwoWay}"></NumericUpDown>
					<ListBox x:Name="lstColors" DataContext="{x:Static local:Program.Config}" Items="{Binding ColorSchemes.SelectedItem}">
						<ListBox.ItemTemplate>
							<DataTemplate>
								<Border Background="{Binding, Converter={x:Static local:ColorScheme.BrushConverter}}">
									<TextBlock Text="{Binding, Converter={x:Static local:ColorScheme.StringConverter}}"></TextBlock>
								</Border>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
					<TextBlock Margin="0,10,0,10">Edit Color:</TextBlock>
					<colorpicker:ColorButton PropertyChanged="OnColorSchemeEdited"
						Color="{Binding #lstColors.SelectedItem, Converter={x:Static local:ColorScheme.ColorConverter}}"></colorpicker:ColorButton>
					<Slider Value="{Binding #lstColors.SelectedItem.Position,
							Mode=TwoWay, Converter={x:Static local:MainWindow.PositionValueConverter}}"
							x:Name="sldPosition"
							Maximum="1" Minimum="0" SmallChange="0.005"
							PropertyChanged="OnPositionSchemeEdited">
					</Slider>
				</StackPanel>
			</ScrollViewer>
		</Expander>
		<StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
			<Label VerticalContentAlignment="Center" Background="OrangeRed" Margin="0,3,3,3"
				   BorderBrush="Black" BorderThickness="1" x:Name="lblLoading">
				Loading...
			</Label>
			<TextBlock VerticalAlignment="Center" Margin="10,3,3,3">Hide results:</TextBlock>
			<Slider x:Name="sldHideStart" Minimum="0" Maximum="1" SmallChange="0.01" Width="100"
					Value="{Binding #Spectrum3D.HideFirstPercentOfResults, Mode=TwoWay}"></Slider>
			<Slider x:Name="sldHideEnd" Minimum="0" Maximum="1" SmallChange="0.01" Width="100"
					Value="{Binding #Spectrum3D.HideLastPercentOfResults, Mode=TwoWay}"></Slider>
			<Button Content="Top View" Background="LightBlue" Button.Click="OnTopViewClick"></Button>
			<Button Content="3D View" Background="LightGreen" Button.Click="OnRestore3DViewClick"></Button>
			<Button IsVisible="False" Content="Dump Data" Button.Click="OnDumpDataClick"></Button>
			<CheckBox x:Name="chkLog10" IsThreeState="True">Log10</CheckBox>
			<CheckBox IsVisible="False" IsChecked="{Binding #Spectrum3D.RenderContinuous, Mode=TwoWay}" Checked="OnRenderChecked" />
			<Label ClipToBounds="True" VerticalContentAlignment="Center" Margin="0,3,0,3" FontSize="14"
				x:Name="GLLabel" BorderThickness="1" BorderBrush="Black">
				GL
			</Label>
			<CheckBox IsChecked="{Binding #Spectrum3D.FastMode, Mode=TwoWay}">Fast Mode</CheckBox>
			<Label VerticalContentAlignment="Center" Margin="10,3,0,3" FontSize="14"
				   x:Name="CoordsLabel">
				Coords...
			</Label>
		</StackPanel>
		<local:Skia3DSpectrum x:Name="Spectrum3D" Grid.Row="1" Grid.Column="1"></local:Skia3DSpectrum>
		<Expander ExpandDirection="Up" Grid.Row="2" Grid.Column="1"
				  IsExpanded="{Binding !#SpectrumSection.DisableRendering, Mode=TwoWay}" x:Name="SpectrumSectionExpander">
			<Expander.Header>
				<TextBlock>Single AMU Section</TextBlock>
			</Expander.Header>
			<DockPanel>
				<DockPanel DockPanel.Dock="Top" LastChildFill="True">
					<CheckBox x:Name="chkSnap" DockPanel.Dock="Right" Margin="10,0,10,0">0.1 AMU Ticks</CheckBox>
					<TextBlock DockPanel.Dock="Left" Margin="10,10,0,10" FontSize="16">AMU: </TextBlock>
					<TextBlock DockPanel.Dock="Left" Margin="5,10,10,10" FontSize="16"
							   Text="{Binding #SectionAMUSlider.Value, Mode=OneWay, Converter={x:Static local:MainWindow.AMUStringValueConverter}}"></TextBlock>
					<Slider SmallChange="0.1" LargeChange="1" DockPanel.Dock="Left" Minimum="1" Maximum="65"
							Value="{Binding #SpectrumSection.AMU, Mode=TwoWay, Converter={x:Static local:MainWindow.AMURoundingValueConverter}}" 
							x:Name="SectionAMUSlider" TickFrequency="1" IsSnapToTickEnabled="{Binding !#chkSnap.IsChecked}"></Slider>
				</DockPanel>
				<StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
					<CheckBox IsChecked="{Binding #SpectrumSection.RenderTemperatureProfile, Mode=TwoWay}"
							  Click="OnShowTempProfileClick">Temperature</CheckBox>
					<CheckBox IsChecked="{Binding #SpectrumSection.RenderGasRegions, Mode=TwoWay}"
							  Click="OnShowGasRegionsClick">Gases</CheckBox>
					<Button Background="#FABDA5" Button.Click="OnExportSectionClick" 
							IsEnabled="{Binding #SpectrumSection.AMUPresent}" x:Name="btnExportSection">
						Export
					</Button>
					<Button Background="#ADE6B7" Button.Click="OnSectionAutoscaleYClick"
							IsEnabled="{Binding #SpectrumSection.AMUPresent}">
						Auto Y
					</Button>
					<Button Background="#ADE2E6" Button.Click="OnSectionAutoscaleXClick"
							IsEnabled="{Binding #SpectrumSection.AMUPresent}">
						Auto X
					</Button>
					<CheckBox x:Name="chkAutoX">Autoupdate X Scale</CheckBox>
					<Label x:Name="lblSectionCoords" FontSize="16" DockPanel.Dock="Bottom" MinHeight="30"
						   Margin="3">Coords...</Label>
				</StackPanel>
				<local:SkiaSectionPlot x:Name="SpectrumSection" MinHeight="200" Margin="10,0,10,0"
									   DockPanel.Dock="Bottom">
				</local:SkiaSectionPlot>
			</DockPanel>
		</Expander>
	</Grid>
</Window>
